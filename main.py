from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
import os
from backend_api import api_router

# --- aiogram imports ---
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.filters import CommandStart

API_TOKEN = "7647115086:AAFvPXk0hdFQU9BqZLOlya5xMvj_aRgS8pA"  # <-- –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
WEBAPP_URL = "https://your-webapp-url.com"  # <-- –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π url –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è

# --- FastAPI app ---
app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(api_router, prefix="/api")

FRONTEND_BUILD_DIR = os.path.join(os.path.dirname(__file__), "webapp", "build")
app.mount("/", StaticFiles(directory=FRONTEND_BUILD_DIR, html=True), name="static")

# --- aiogram bot logic ---
dp = Dispatcher()

main_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üí® –ö—É—Ä–∏—Ç—å –∫–∞–ª—å—è–Ω", callback_data="smoke")],
    [InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
    [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
])

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ö–∞–ª—å—è–Ω –ö–ª–∏–∫–µ—Ä</b>!\n\n–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∫—É—Ä–∏—Ç—å –∫–∞–ª—å—è–Ω –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—ã–º!",
        reply_markup=main_kb,
        parse_mode="HTML"
    )

@dp.message(lambda m: m.text == "/webapp")
async def webapp_cmd(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å—è–Ω-–∫–ª–∏–∫–µ—Ä", web_app=WebAppInfo(url=WEBAPP_URL))]
    ])
    await message.answer("–ó–∞–ø—É—Å—Ç–∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–ª—å—è–Ω-–∫–ª–∏–∫–µ—Ä–∞!", reply_markup=kb)

# --- Background task for aiogram ---
async def start_bot():
    bot = Bot(token=API_TOKEN)
    await dp.start_polling(bot)

@app.on_event("startup")
def launch_bot():
    loop = asyncio.get_event_loop()
    loop.create_task(start_bot())